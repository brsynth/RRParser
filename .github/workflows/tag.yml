name: Tag

on:
  push:
    branches:
      - stable
    paths:
      - '**.py'
      - '!tests/**'

jobs:

  Build-Recipe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Make
        run: |
          sudo apt-get update
          sudo apt-get -y install make

      - name: Checkout CI/CD Toolkit
        uses: actions/checkout@v4
        with:
          repository: breakthewall/cicd-toolkit
          path: cicd-toolkit
          persist-credentials: false
          fetch-depth: 0

      - name: Build Recipe
        run: |
          cd cicd-toolkit
          make -C makefiles -f conda.mk build-recipe

      - name: Save Recipe as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: recipe
          path: cicd-toolkit/recipe/meta.yaml

  Conda-Build:
    needs: [Build-Recipe]
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: ["ubuntu", "macos"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Checkout CI/CD Toolkit
        uses: actions/checkout@v4
        with:
          repository: breakthewall/cicd-toolkit
          path: cicd-toolkit
          persist-credentials: false
          fetch-depth: 0

      - name: Load Recipe
        uses: actions/download-artifact@v4
        with:
          name: recipe
          path: cicd-toolkit/recipe

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: test-env
          environment-file: cicd-toolkit/recipe/conda_build_env.yaml
#          python-version: 3.9
          auto-update-conda: true
          # miniforge-variant: Mambaforge
          miniforge-version: latest

      - name: Install Dependencies
        shell: bash -l {0}
        run: |
          mamba install -y conda-build conda-verify

      - name: Build Conda Package
        shell: bash -l {0}
        run: |
          ls -lah cicd-toolkit/recipe
          cat cicd-toolkit/recipe/meta.yaml
          pip --version
          pip list
          conda-build cicd-toolkit/recipe

      - name: Verify Build
        shell: bash -l {0}
        run: |
          conda-verify $(conda-build cicd-toolkit/recipe --output)

      # - name: Upload Built Package as Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: built-conda-package
      #     path: ${{ github.workspace }}/build_artifacts/**/*

  Tag:
    needs: [Conda-Build]
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Bump Version and Push Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: stable
          tag_prefix:

      - name: Create GitHub Release
        uses: actions/create-release@v2
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate CHANGELOG
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3
          bundler-cache: true

      - name: Install & Run Changelog Generator
        run: |
          gem install github_changelog_generator
          AUTH=$(echo $GITHUB_REPOSITORY | sed -e 's/\// /g' | awk '{print "--user " $1 " --project " $2}')
          github_changelog_generator $AUTH --no-unreleased
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update _version.py
        env:
          TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          folder=`dirname $(find . -name _version.py)`
          echo "__version__ = \"$TAG\"" > $folder/_version.py

      - name: Commit Changes
        run: |
          git config --local user.email "$GITHUB_EMAIL"
          git config --local user.name "$GITHUB_USERNAME"
          git commit -m "doc(CHANGELOG): update" -a
        env:
          GITHUB_USERNAME: breakthewall
          GITHUB_EMAIL: joan.herisson@univ-evry.fr

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Update Master Branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
